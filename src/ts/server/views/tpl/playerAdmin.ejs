<link href="/js/cropper/cropper.css" rel="stylesheet">
<script src="/js/cropper/cropper.js"></script>
<script src="/js/createjs/createjs.min.js"></script>
<script src="/js/createjs/easeljs.min.js"></script>
<style>
    img {
        max-width: 100%; /* This rule is very important, please do not ignore this! */
    }
</style>
<div class="PlayerAdmin">
    <div class="AvatarCrop">
        <input id="file1" type="file" value="..." onchange="showFile(this.files);">最小尺寸720x304
        <input type="button" value="更新头像" onclick="onUpdateAvatar()">
        <div>
            <img id="image">
        </div>
        <canvas id="avatarPreview"></canvas>
        <br>
    </div>
    <form class="PlayerData" action='/admin/player/<%= op %>' method='post' onsubmit="return checkUser();">
        <img id="playerAvatar" src="">
        <br>
        <input id="playerAvatarData" name="avatar" value="" style="display: none"/>
        <br>昵称:<input id="playerName" name="name" value="newPlayerTest"/>
        <br>身高:<input id="playerHeight" name="height" value="170+"/>
        <br>体重:<input id="playerWeight" name="weight" value="70"/>
        <br>天梯分:<input id="playerEloScore" name="eloScore" value="2000"/>
        <br>球风:<input id="playerStyle" name="style" value="1"/>
        <br> <input type='submit' value='Submit'>
    </form>
</div>

<script>
    var imagePath = "/img/cache/test.jpg";
    var image = document.getElementById('image');
    var playerId = 0;
    //    image.src = imagePath;
    var cropper;
    //    cropper= new Cropper(image, {
    //        aspectRatio: 180 / 76,
    //        crop: function (e) {
    //            console.log(e.detail.x);
    //            console.log(e.detail.y);
    //            console.log(e.detail.width);
    //            console.log(e.detail.height);
    ////            console.log(e.detail.rotate);
    ////            console.log(e.detail.scaleX);
    ////            console.log(e.detail.scaleY);
    //            updateLeftAvatar(e.detail);
    //        }
    //    });

    var onUpdateAvatar = function () {
        var playerAvatar = document.getElementById('playerAvatar');
        playerAvatar.src = cropper.getCroppedCanvas().toDataURL();
        document.getElementById('playerAvatarData').value = playerAvatar.src;
        $(".cropper-container").hide();
    }


    var stage;
    var leftAvatarBmp;
    var rightAvatarBmp;
    var updateLeftAvatar = function (cropData) {
        var scale = cropData.width / 180;
        leftAvatarBmp.x = -cropData.x / scale;
        leftAvatarBmp.y = -cropData.y / scale;
        leftAvatarBmp.scaleX = leftAvatarBmp.scaleY = 1 / scale;

        rightAvatarBmp.x = -cropData.x / scale;
        rightAvatarBmp.y = -cropData.y / scale;
        rightAvatarBmp.scaleX = rightAvatarBmp.scaleY = 1 / scale;

    }
    var getLeftPlayerCard = function (avatarPath) {
        //width 150
        var ctn = new createjs.Container();
        var leftAvatarBg = new createjs.Bitmap("/img/panel/leftAvatarBg.png");//694x132
        leftAvatarBg.x = 15;
        leftAvatarBg.y = 6;

        var avatarCtn = new createjs.Container();
        avatarCtn.x = leftAvatarBg.x + 25;
        avatarCtn.y = leftAvatarBg.y + 9;
        var leftMask = new createjs.Shape();
        var sx = 44;
        leftMask.graphics.beginFill("#000000")
                .moveTo(sx, 0)
                .lineTo(0, 76)
                .lineTo(180 - sx, 76)
                .lineTo(180, 0)
                .lineTo(sx, 0);
        var avatarBmp = new createjs.Bitmap(avatarPath);
        avatarBmp.mask = leftMask;
        avatarCtn.addChild(leftMask);
        avatarCtn.addChild(avatarBmp);
        leftAvatarBmp = avatarBmp;
//        this.avatarArr.push(avatarCtn);
        ctn.addChild(avatarCtn);
        ctn.addChild(leftAvatarBg);

        var leftEloBg = new createjs.Bitmap("/img/panel/leftEloBg.png");//694x132
        leftEloBg.x = leftAvatarBg.x + 27;
        leftEloBg.y = 70;
        ctn.addChild(leftEloBg);

        var leftEloLabel = new createjs.Text("1984", "18px Arial", "#e2e2e2");
        leftEloLabel.textAlign = "left";
        leftEloLabel.x = leftEloBg.x + 12;
        leftEloLabel.y = leftEloBg.y + 3;
//        this.eloLabelArr.push(leftEloLabel);
        ctn.addChild(leftEloLabel);


        var styleCtn = new createjs.Container();
        var leftStyleIcon = new createjs.Bitmap("/img/panel/feng.png");//694x132
        styleCtn.x = leftAvatarBg.x + 120;
        styleCtn.y = leftAvatarBg.y + 80;
        styleCtn.addChild(leftStyleIcon);
//        this.styleArr.push(styleCtn);
        ctn.addChild(styleCtn);

        var leftNameLabel = new createjs.Text("player", "bold 18px Arial", "#e2e2e2");
        leftNameLabel.textAlign = "left";
        leftNameLabel.x = leftAvatarBg.x + 20;
        leftNameLabel.y = leftAvatarBg.y + 90;
//        this.nameLabelArr.push(leftNameLabel);
        ctn.addChild(leftNameLabel);

        return ctn;
    }

    var getRightPlayerCard = function (avatarPath) {
        var ctn = new createjs.Container();
        var rightAvatarBg = new createjs.Bitmap("/img/panel/rightAvatarBg.png");//694x132
        rightAvatarBg.x = 14;
        rightAvatarBg.y = 6;

        var rightAvatarCtn = new createjs.Container();
        rightAvatarCtn.x = rightAvatarBg.x + 11;
        rightAvatarCtn.y = rightAvatarBg.y + 9;
        var rightMask = new createjs.Shape();
        var sx = 44;
        rightMask.graphics.beginFill("#000000")
                .moveTo(0, 0)
                .lineTo(sx, 76)
                .lineTo(180, 76)
                .lineTo(180 - sx, 0)
                .lineTo(0, 0);
        var avatarBmp = new createjs.Bitmap(avatarPath);
        avatarBmp.mask = rightMask;
        rightAvatarCtn.addChild(rightMask);
        rightAvatarCtn.addChild(avatarBmp);
        rightAvatarBmp = avatarBmp;
//        this.avatarArr.push(rightAvatarCtn);
        ctn.addChild(rightAvatarCtn);
        ctn.addChild(rightAvatarBg);

        var rightEloBg = new createjs.Bitmap("/img/panel/rightEloBg.png");//694x132
        rightEloBg.x = rightAvatarBg.x + 125;
        rightEloBg.y = 70;
        ctn.addChild(rightEloBg);

        var rightEloLabel = new createjs.Text("99999", "18px Arial", "#e2e2e2");
        rightEloLabel.textAlign = "right";
        rightEloLabel.x = rightEloBg.x + 53;
        rightEloLabel.y = rightEloBg.y + 3;
//        this.eloLabelArr.push(rightEloLabel);
        ctn.addChild(rightEloLabel);


        var styleCtn = new createjs.Container();
        var rightStyleIcon = new createjs.Bitmap("/img/panel/huo.png");//694x132
        styleCtn.x = rightAvatarBg.x + 60;
        styleCtn.y = rightAvatarBg.y + 80;
//        this.styleArr.push(styleCtn);
        styleCtn.addChild(rightStyleIcon);
        ctn.addChild(styleCtn);

        var rightNameLabel = new createjs.Text("player", "bold 18px Arial", "#e2e2e2");
        rightNameLabel.textAlign = "right";
        rightNameLabel.x = rightAvatarBg.x + 195;
        rightNameLabel.y = rightAvatarBg.y + 90;
//        this.nameLabelArr.push(rightNameLabel);
        ctn.addChild(rightNameLabel);
        return ctn;
    }
    var initCanvas = function () {
        var stageWidth = 500;
        var stageHeight = 130;
        var canvas = document.getElementById("avatarPreview");
        canvas.setAttribute("width", stageWidth + "");
        canvas.setAttribute("height", stageHeight + "");
        var stage = new createjs.Stage(canvas);
        stage.autoClear = true;
        createjs.Ticker.framerate = 60;
        createjs.Ticker.addEventListener("tick", function () {
            stage.update();
        });
        return stage;
    };
    //    stage = initCanvas();
    //    stage.addChild(getLeftPlayerCard(imagePath));
    //    var rightAvatarCtn = getRightPlayerCard(imagePath);
    //    rightAvatarCtn.x = 250;
    //    stage.addChild(rightAvatarCtn);
</script>
<script>

    function checkUser() {
        function isNull(elemId) {
            return document.getElementById(elemId).value == '';
        }

//        if (isNull("playerName"))return false;
//        if (isNull("playerAvatarData"))return false;
//        if (isNull("playerStyle"))return false;
        return true;
    }
    function showFile(files) {
        var fr = new FileReader();
        fr.readAsDataURL(files[0]);
        fr.onload = function (e) {
//            document.getElementById("playerAvatar").src = e.target.result;


            ///init
            imagePath = e.target.result;
            image.src = e.target.result;
            stage = initCanvas();
            stage.addChild(getLeftPlayerCard(imagePath));
            var rightAvatarCtn = getRightPlayerCard(imagePath);
            rightAvatarCtn.x = 250;
            stage.addChild(rightAvatarCtn);

            cropper = new Cropper(image, {
                aspectRatio: 180 / 76,
                crop: function (e) {
                    console.log(e.detail.x);
                    console.log(e.detail.y);
                    console.log(e.detail.width);
                    console.log(e.detail.height);
//            console.log(e.detail.rotate);
//            console.log(e.detail.scaleX);
//            console.log(e.detail.scaleY);
                    updateLeftAvatar(e.detail);
                }
            });
        };
    }
</script>